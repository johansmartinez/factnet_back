// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using factnet_back;

#nullable disable

namespace factnet_back.Migrations
{
    [DbContext(typeof(FacturationContext))]
    [Migration("20221128053316_changeContext")]
    partial class changeContext
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("factnet_back.Models.Cliente", b =>
                {
                    b.Property<string>("dni")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("apellidos")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("direccion")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("fechaNacimiento")
                        .HasColumnType("datetime2");

                    b.Property<string>("nombres")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("dni");

                    b.ToTable("CLIENTES", (string)null);

                    b.HasData(
                        new
                        {
                            dni = "00000",
                            apellidos = "PRUEBA",
                            direccion = "DIRECCIÓN DE PRUEBA",
                            fechaNacimiento = new DateTime(2000, 6, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            nombres = "USUARIO"
                        });
                });

            modelBuilder.Entity("factnet_back.Models.Factura", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("clienteDni")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("facturacion")
                        .HasColumnType("datetime2");

                    b.HasKey("id");

                    b.HasIndex("clienteDni");

                    b.ToTable("FACTURAS", (string)null);

                    b.HasData(
                        new
                        {
                            id = new Guid("62881386-8eee-4ca2-b946-5abc0d8c73e7"),
                            clienteDni = "00000",
                            facturacion = new DateTime(2020, 7, 12, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("factnet_back.Models.Producto", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("precioUnitario")
                        .HasColumnType("int");

                    b.Property<Guid?>("proveedorId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("id");

                    b.HasIndex("proveedorId");

                    b.ToTable("PRODUCTOS", (string)null);

                    b.HasData(
                        new
                        {
                            id = new Guid("96b4bd45-9c9e-4e1f-85ee-9c5ea0e5c715"),
                            nombre = "PRODUCTO DE PRUEBA",
                            precioUnitario = 1200,
                            proveedorId = new Guid("40b4111a-defd-4539-942c-0adc8225e413")
                        });
                });

            modelBuilder.Entity("factnet_back.Models.Proveedor", b =>
                {
                    b.Property<Guid>("proveedorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("proveedorId");

                    b.ToTable("PROVEEDORES", (string)null);

                    b.HasData(
                        new
                        {
                            proveedorId = new Guid("40b4111a-defd-4539-942c-0adc8225e413"),
                            nombre = "PROVEEDOR DE PRUEBA"
                        });
                });

            modelBuilder.Entity("factnet_back.Models.Ventas", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("facturaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("productoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("unidades")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("facturaId");

                    b.HasIndex("productoId");

                    b.ToTable("VENTAS", (string)null);

                    b.HasData(
                        new
                        {
                            id = new Guid("09d15e2c-e1cc-4d55-ac4b-5f01c098b899"),
                            facturaId = new Guid("62881386-8eee-4ca2-b946-5abc0d8c73e7"),
                            productoId = new Guid("96b4bd45-9c9e-4e1f-85ee-9c5ea0e5c715"),
                            unidades = 2
                        });
                });

            modelBuilder.Entity("factnet_back.Models.Factura", b =>
                {
                    b.HasOne("factnet_back.Models.Cliente", "Cliente")
                        .WithMany("Facturas")
                        .HasForeignKey("clienteDni")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("factnet_back.Models.Producto", b =>
                {
                    b.HasOne("factnet_back.Models.Proveedor", "Proveedor")
                        .WithMany("Productos")
                        .HasForeignKey("proveedorId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Proveedor");
                });

            modelBuilder.Entity("factnet_back.Models.Ventas", b =>
                {
                    b.HasOne("factnet_back.Models.Factura", "Factura")
                        .WithMany("Ventas")
                        .HasForeignKey("facturaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("factnet_back.Models.Producto", "Producto")
                        .WithMany("Ventas")
                        .HasForeignKey("productoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Factura");

                    b.Navigation("Producto");
                });

            modelBuilder.Entity("factnet_back.Models.Cliente", b =>
                {
                    b.Navigation("Facturas");
                });

            modelBuilder.Entity("factnet_back.Models.Factura", b =>
                {
                    b.Navigation("Ventas");
                });

            modelBuilder.Entity("factnet_back.Models.Producto", b =>
                {
                    b.Navigation("Ventas");
                });

            modelBuilder.Entity("factnet_back.Models.Proveedor", b =>
                {
                    b.Navigation("Productos");
                });
#pragma warning restore 612, 618
        }
    }
}
